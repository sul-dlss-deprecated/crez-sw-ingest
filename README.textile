h1. crez-sw-ingest

{<img src="https://secure.travis-ci.org/sul-dlss/crez-sw-ingest.png?branch=master" alt="Build Status" />}[http://travis-ci.org/sul-dlss/crez-sw-ingest]
badge for coveralls (coverage)
badge for gemnasium (dependencies)

Course Reserve (data from Sirsi) to SearchWorks (Solr) Ingest (Software).

This software 
<ol>
<li>pulls the latest course reserve data feed from Jenson</li>
<li>extracts the items with reserve status "ON_RESERVE"</li>
<li>gets the raw marcxml for the implicated ckeys</li>
<li>runs the marcxml through Stanford's SolrMarc and grabs the generated Solr Document before it is written to the index</li>
<li>adds the course reserve information to the Solr Document</li>
<li>updates the Solr Document in the index</li>
</ol>

It also removes stale course reserve data from the SearchWorks index.

h2. Requirements

JRuby 1.7, configured to use Ruby 1.9 (which it is by default)

h2. Installation/Setup

<pre>
  git clone https://github.com/sul-dlss/crez-sw-ingest.git
  cd crez-sw-ingest
  rvm use jruby-1.7
  bundle install
  rake setup_test_solr
</pre>

h2.  How to Use

1. Adjust config/settings.yml.
2. Make sure you are using jruby 1.7, configured to use Ruby 1.9
3. Make sure you are using the latest solrmarc-sw code.

<pre>
  rvm use jruby-1.7
  rake setup_test_solr
</pre>  

(run script of choice in bin folder.)

h2.  How to Test

1. Adjust config/settings.yml.
2. Make sure you are using jruby 1.7, configured to use Ruby 1.9
3. Make sure you are using the latest solrmarc-sw code.

<pre>
  rvm use jruby-1.7
  rake setup_test_solr
	rake run_jetty
  rake ci
  rake stop_jetty
</pre>  

Note:  sometimes if you don't wait long enough after starting jetty, the Solr index gets locked.
You can fix this by

<pre>
	rake stop_jetty
	rm -rf solrmarc-sw/test/jetty/solr/data/index
</pre>


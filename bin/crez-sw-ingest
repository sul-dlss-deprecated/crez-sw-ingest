#!/usr/bin/env ruby

$LOAD_PATH.unshift('lib', File.expand_path(File.dirname(__FILE__)))
require 'rubygems'
begin
  require 'index_crez_data'
  require 'solrj_wrapper'
  require 'solrmarc_wrapper'
rescue LoadError
  require 'bundler/setup'
  require 'index_crez_data'
  require 'solrj_wrapper'
  require 'solrmarc_wrapper'
end
require 'optparse'
require 'yaml'

DEFAULT_OPTIONS = {
  :crez_data_file => File.expand_path('test_data/nonrezfirst.csv', File.dirname(__FILE__)),
  :solrmarc_dist_dir => "/hudson/home/hudson/hudson/jobs/solrmarc-SW-solr3.5-dist/workspace/dist",
  :solrmarc_conf_props_file => "sw_config.properties",
  :solr_url => "http://localhost:8983/solr",
#  :solrj_jar_dir => DEFAULT_OPTIONS[:solrmarc_dist_dir] + "lib",
  :solrj_queue_size => 10,
  :solrj_num_threads => 4,
  :progress => true
}
DEFAULT_OPTIONS[:solrj_jar_dir] = DEFAULT_OPTIONS[:solrmarc_dist_dir] + "lib"

require 'settings'
$LOAD_PATH.unshift(File.dirname(__FILE__))
settings_env = ENV["SETTINGS"] ||= 'test'
settings_file_options = Settings.new(settings_env)

config_file_options = {}
cmdline_options = {}
dry_run = false

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [SETTINGS=[group_in_settings.yml]] [options] [path_to_crez_data_file]"

  opts.on('-c', '--config FILE', "Load configuration settings from FILE (other than config/settings.yml)") do |filename|
    config_file = filename
    config_file_options = YAML.load(File.read(config_file))
  end
  
  opts.on('-d', '--solrmarc-dir DIR', "Load SolrMarc distribution from DIR") do |dir|
    (cmdline_options[:solrmarc_dist_dir] ||= "") << dir
  end
  
  opts.on('-j', '--solrj-jars DIR', "Load SolrJ jars from DIR") do |dir|
    (cmdline_options[:solrj_jar_dir] ||= "") << dir
  end

  opts.on('-n', '--no-action', "Dry run; don't execute") do
    dry_run = true
  end
  
  opts.on('-p', '--solrmarc-props FILE', "SolrMarc configuration properties FILE (relative to solrmarc-dir)") do |solrmarc_conf_props_file|
    (cmdline_options[:solrmarc_conf_props_file] ||= "") << solrmarc_conf_props_file
  end

  opts.on('-q', '--solrj-queue INT', "Queue size for SolrJ StreamingUpdateServer") do |num|
    (cmdline_options[:solrj_queue_size] ||= "") << num.to_i
  end

  opts.on('-t', '--solrj-thread INT', "Number of threads for SolrJ StreamingUpdateServer") do |num|
    (cmdline_options[:solrj_num_threads] ||= "") << num.to_i
  end

  opts.on('-u', '--solr-url URL', "Solr base URL with docs to be updated") do |solr_url|
    (cmdline_options[:solr_url] ||= "") << solr_url
  end

  opts.on_tail('-h', '--help', "Show this help message") do
    puts opts
    exit
  end
end

optparse.parse!

options = DEFAULT_OPTIONS.merge(settings_file_options.as_hash).merge(config_file_options).merge(cmdline_options)

if dry_run
  puts "Defaults loaded from config/settings.yml test group"
  puts YAML.dump(options)
  exit
end

crez_file_path = ARGV.pop
if crez_file_path.nil?
  puts "** You must provide the full path to a course reserves data csv file as an argument **"
  puts optparse
  exit
end
  
solrmarc_wrapper = SolrmarcWrapper.new(options[:solrmarc_dist_dir], options[:solrmarc_conf_props_file], options[:solr_url])
solrj_wrapper = SolrjWrapper.new(options[:solrj_jar_dir], options[:solr_url], options[:solrj_queue_size], options[:solrj_num_threads])
index_crez_data = IndexCrezData.new(solrmarc_wrapper, solrj_wrapper)
index_crez_data.index_crez_data(crez_file_path)
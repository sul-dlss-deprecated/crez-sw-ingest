#!/usr/bin/env ruby

$LOAD_PATH.unshift('lib', File.expand_path(File.dirname(__FILE__)))
require 'rubygems'
begin
  require 'crez_indexer'
  require 'solrj_wrapper'
  require 'solrmarc_wrapper'
rescue LoadError
  require 'bundler/setup'
  require 'crez_indexer'
  require 'solrj_wrapper'
  require 'solrmarc_wrapper'
end
require 'optparse'
require 'yaml'
require 'settings'
require 'logger'

$LOAD_PATH.unshift(File.dirname(__FILE__))

DEFAULT_OPTIONS = {
  :solrmarc_dist_dir => "solrmarc-sw/dist",
  :solrmarc_conf_props_file => "sw_config.properties",
  :solr_url => "http://127.0.0.1:8983/solr",
  :solrj_jar_dir => "solrmarc-sw/dist/lib",
  :solrj_num_threads => 4, # future use w threach
  :settings_group => "test",
  :log_level => "warn"
}

config_file_options = {}
cmdline_options = {}
dry_run = false

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [options] [path_to_crez_data_file]"

  opts.on('-c', '--config FILE', "Load configuration settings from FILE (other than config/settings.yml)") do |filename|
    config_file = filename
    config_file_options = YAML.load(File.read(config_file))
  end
  
  opts.on('-d', '--solrmarc-dir DIR', "Load SolrMarc distribution from DIR") do |dir|
    (cmdline_options[:solrmarc_dist_dir] ||= "") << dir
  end
  
  opts.on('-j', '--solrj-jars DIR', "Load SolrJ jars from DIR") do |dir|
    (cmdline_options[:solrj_jar_dir] ||= "") << dir
  end

  opts.on('-m', '--log-level STR', "Severity level of log messages to output") do |str|
    (cmdline_options[:log_level] ||= "") << str
  end

  opts.on('-n', '--no-action', "Dry run; don't execute") do
    dry_run = true
  end
  
  opts.on('-p', '--solrmarc-props FILE', "SolrMarc configuration properties FILE (relative to solrmarc-dir)") do |solrmarc_conf_props_file|
    (cmdline_options[:solrmarc_conf_props_file] ||= "") << solrmarc_conf_props_file
  end

  opts.on('-s', '--settings-group STR', "the group to use in the settings.yml file [default: #{DEFAULT_OPTIONS[:settings_group]}]") do |str|
    (cmdline_options[:settings_group] ||= "") << str
  end

  opts.on('-t', '--solrj-thread INT', "(future) Number of threads for Solr updates") do |num|
    (cmdline_options[:solrj_num_threads] ||= "") << num.to_i
  end

  opts.on('-u', '--solr-url URL', "Solr base URL with docs to be updated") do |solr_url|
    (cmdline_options[:solr_url] ||= "") << solr_url
  end

  opts.on_tail('-h', '--help', "Show this help message") do
    puts opts
    exit
  end
end

optparse.parse!

settings_group = cmdline_options[:settings_group] ||= DEFAULT_OPTIONS[:settings_group]
settings_file_options = Settings.new(settings_group)

options = DEFAULT_OPTIONS.merge(settings_file_options.as_hash).merge(config_file_options).merge(cmdline_options)
puts "Solr url to receive updates: #{options[:solr_url]}"

if dry_run
  puts "Settings are: "
  options.each { |key, val| puts "#{key} => #{val}\n"}
  exit
end

crez_file_path = ARGV.pop
if crez_file_path.nil?
  puts "** You must provide the full path to a course reserves data csv file as an argument **"
  puts optparse
  exit
end
  
case options[:log_level]
  when "debug"
    logger_level = Logger::DEBUG
  when "warn"
    logger_level = Logger::WARN
  when "error"
    logger_level = Logger::ERROR
  when "fatal"
    logger_level = Logger::FATAL
  else
    logger_level = Logger::INFO
end

  
solrmarc_wrapper = SolrmarcWrapper.new(options[:solrmarc_dist_dir], options[:solrmarc_conf_props_file], options[:solr_url], logger_level)
solrj_wrapper = SolrjWrapper.new(options[:solrj_jar_dir], options[:solr_url])
crez_indexer = CrezIndexer.new(solrmarc_wrapper, solrj_wrapper, logger_level)
crez_indexer.index_crez_data(crez_file_path)